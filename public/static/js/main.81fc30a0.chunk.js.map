{"version":3,"sources":["components/Recipes.js","utils/blockStyles/HeaderStyleDropdown.js","utils/blockStyles/BlockStyleButton.js","utils/blockStyles/BlockStyleToolbar.js","utils/InRecipeTextEditor.js","utils/BackButton.js","components/Recipe.js","utils/SearchBar.js","containers/Nav.js","utils/TextEditor.js","components/AddRecipeForm.js","components/Register.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Recipes","props","recipesData","recipes","filteredRecipes","filter","recipe","recipe_title","toLowerCase","includes","search","map","image","recipe_photo","react_default","a","createElement","src","alt","className","key","id","onClick","handleClickedRecipe","HeaderStyleDropdown","onToggle","event","value","target","_this","this","active","onChange","headerOptions","heading","style","Object","values","label","React","Component","BlockStyleButton","e","preventDefault","title","BLOCK_TYPES","BLOCK_TYPE_HEADINGS","getBlockStyle","block","getType","BlockStyleToolbar","editorState","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","blockStyles_HeaderStyleDropdown","s","type","blockStyles_BlockStyleButton","TextEditor","state","editedDetails","contentState","uploadDetails","convertToRaw","JSON","stringify","content","setState","onTextEditorChangeHandlerEdit","handleKeyCommand","command","newState","RichUtils","onUnderlineClick","toggleInlineStyle","onBoldClick","onItalicClick","toggleBlockType","blockStyles_BlockStyleToolbar","Draft","blockStyleFn","placeholder","spellCheck","readOnly","BackButton","handleClickedBackButton","Recipe","editing","detailsForUpload","imageUrl","onEditHandler","deleteHandler","_callee","regenerator_default","wrap","_context","prev","next","window","confirm","axios","delete","concat","selectedRecipe","then","res","console","log","data","history","push","stop","setStateDetailsForUpload","onSaveHandler","_callee2","formData","_context2","details","recipe_details","photo","post","catch","err","onTitleChangeHandler","onImageUrlChangeHandler","_this2","recipeData","InRecipeTextEditor","EditorState","createWithContent","convertFromRaw","parse","defaultValue","required","date","moment","recipe_added_date","format","editDiscard","index_esm","action","encType","method","onSubmit","display","utils_BackButton","SearchBar","length","handleSearch","autoFocus","Nav","classes","addNew","loggedIn","react_router_dom","to","logOut","handleSignOut","clearSearchClass","utils_SearchBar","handleClearSearchBar","createEmpty","onTextEditorChangeHandler","AddRecipeForm","newRecipe","user_id","objectSpread","onSubmitHandler","Date","now","name","user","utils_TextEditor","for","Register","firstName","lastName","email","password","failedRegistrationMessage","handleInputChange","fieldId","defineProperty","handleInputSubmit","first","last","_ref","asyncToGenerator","mark","checkForSession","_x","apply","arguments","Login","failedLoginMessage","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loading","setHistoryState","location","pathname","handleLoading","setUserState","userData","get","message","handleGetRecipes","clickedRecipeHandler","recipeId","rec","clickedBackButtonHandler","prevProps","prevState","_this3","routes","react_router","path","render","components_Recipe","assign","components_AddRecipeForm","exact","components_Recipes","components_Register","components_Login","containers_Nav","withRouter","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81fc30a0.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Recipes = (props) => {\n\n    const recipesData = props.recipes\n\n    let filteredRecipes = recipesData ? recipesData.filter(recipe => {\n        return recipe.recipe_title.toLowerCase().includes(props.search.toLowerCase())\n    }) : null\n\n    let recipes = recipesData ? props.search ? filteredRecipes.map(recipe => {\n        const image = recipe.recipe_photo ? <img src={recipe.recipe_photo} alt={recipe.recipe_title}/>  : null\n        return(\n            <article className=\"card\" key={recipe.id} onClick={() => props.handleClickedRecipe(recipe.id)}>\n                {image}\n                <div className=\"recipeTitle\">\n                    <h3>{recipe.recipe_title}</h3>\n                </div>\n            </article>\n        )\n    })\n    :\n    recipesData.map(recipe => {\n        const image = recipe.recipe_photo ? <img src={recipe.recipe_photo} alt=\"Sample\"/>  : null\n        return(\n            <article className=\"card\" key={recipe.id} onClick={() => props.handleClickedRecipe(recipe.id)}>\n                {image}\n                <div className=\"recipeTitle\">\n                    <h3>{recipe.recipe_title}</h3>\n                </div>\n            </article>\n        )\n    }) : null\n\n    return(\n        <div>\n            <div className='cards'>\n                {recipes}\n            </div>\n\n        </div>\n\n        \n    )\n}\n\nexport default Recipes","import React from \"react\";\nclass HeaderStyleDropdown extends React.Component {\n\n    onToggle = event => {\n        let value = event.target.value\n        this.props.onToggle(value)\n    }\n    \n    render() {\n        return (\n        <select value={this.props.active} onChange={this.onToggle} className=\"formatButtons\">\n            <option value=\"\">Header Levels</option>\n            {this.props.headerOptions.map(heading => {\n            return (\n                <option value={heading.style} key={Object.values(heading)}>\n                {heading.label}\n                </option>\n            )})}\n        </select>\n    )}\n}\nexport default HeaderStyleDropdown","import React from \"react\"\nclass BlockStyleButton extends React.Component {\n    onToggle = (e) => {\n        e.preventDefault()\n        this.props.onToggle(this.props.style)\n    }\n    render() {\n        let className = \"RichEditor-styleButton formatButtons\"\n        if (this.props.active) {\n        className += \" RichEditor-activeButton\"\n        }\n    return (\n            <button className={className} onClick={this.onToggle} title={this.props.style}>\n                {this.props.label}\n            </button>\n        );\n    }\n}\nexport default BlockStyleButton","import React from \"react\";\nimport HeaderStyleDropdown from './HeaderStyleDropdown'\nimport BlockStyleButton from './BlockStyleButton'\n\nexport const BLOCK_TYPES = [\n    { label: \" “ ” \", style: \"blockquote\" },\n    { label: \"UL\", style: \"unordered-list-item\" },\n    { label: \"OL\", style: \"ordered-list-item\" },\n    { label: \"{ }\", style: 'code-block' }\n];\nexport const BLOCK_TYPE_HEADINGS = [\n    { label: \"H1\", style: \"header-one\" },\n    { label: \"H2\", style: \"header-two\" },\n    { label: \"H3\", style: \"header-three\" },\n    { label: \"H4\", style: \"header-four\" },\n    { label: \"H5\", style: \"header-five\" },\n    { label: \"H6\", style: \"header-six\" }\n]\n\nexport function getBlockStyle(block) {\n    switch (block.getType()) {\n        case \"blockquote\":\n            return \"RichEditor-blockquote\";\n        default:\n            return null;\n    }\n}\n\nclass BlockStyleToolbar extends React.Component {\n    render() {\n        const { editorState } = this.props;\n        const selection = editorState.getSelection();\n        const blockType = editorState\n        .getCurrentContent()\n        .getBlockForKey(selection.getStartKey())\n        .getType();\n        \n        return (\n        <div className='blockStyleToolBar'>\n        <span className=\"RichEditor-controls\">\n            <HeaderStyleDropdown\n            headerOptions={BLOCK_TYPE_HEADINGS}\n            active={blockType}s\n            onToggle={this.props.onToggle}\n            />\n            \n            {BLOCK_TYPES.map(type => {\n            return (\n            <BlockStyleButton\n            active={type.style === blockType}\n            label={type.label}\n            onToggle={this.props.onToggle}\n            style={type.style}\n            key={type.label}\n            type={type}\n            />\n            );\n            })}\n        </span>\n        </div>\n        );\n    }\n}\n\nexport default BlockStyleToolbar","import React, { Component } from 'react'\nimport { Editor, RichUtils, convertToRaw } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nimport BlockStyleToolbar, { getBlockStyle } from './blockStyles/BlockStyleToolbar'\n\n\nclass TextEditor extends Component {\n    state = {\n        editorState: this.props.editedDetails,\n    }\n\n\n    onChange = (editorState) => {\n        let contentState = this.state.editorState.getCurrentContent()\n        let uploadDetails = convertToRaw(contentState)\n        uploadDetails[\"content\"] = JSON.stringify(uploadDetails.content)\n\n        this.setState({\n            editorState\n        }, this.props.onTextEditorChangeHandlerEdit(uploadDetails))\n    }\n\n    handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(this.state.editorState, command)\n        if (newState) {\n            this.onChange(newState)\n            return 'handled'\n        }\n        return 'not-handled'\n    }\n\n    onUnderlineClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'))\n    }\n    onBoldClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'))\n    }\n    onItalicClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'))\n    }\n\n    toggleBlockType = (blockType) => {\n        this.onChange(RichUtils.toggleBlockType(this.state.editorState, blockType))\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='formatButtonsContainer'>\n                    <button className=\"formatButtons\" onClick={this.onUnderlineClick} title='underline'><u>U</u></button>\n                    <button className=\"formatButtons\" onClick={this.onBoldClick} title='bold'><b>B</b></button>\n                    <button className=\"formatButtons\" onClick={this.onItalicClick} title='italics'><em>I</em></button>\n                    <BlockStyleToolbar\n                        editorState={this.state.editorState}\n                        onToggle={this.toggleBlockType}\n                    />\n                </div>\n                <div className=\"editors\">\n                    <Editor \n                        blockStyleFn={getBlockStyle}\n                        editorState={this.state.editorState}\n                        handleKeyCommand={this.handleKeyCommand}\n                        onChange={this.onChange}\n                        placeholder='Enter ingredients, timing and recipe steps...'\n                        spellCheck={true}\n                        readOnly={false}\n                    />\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextEditor","import React from 'react'\n\nlet BackButton = (props) => {\n    return (\n        <div className=\"backButton-container\">\n            <div className=\"arrow arrow--left\" onClick={props.handleClickedBackButton}></div>\n        </div>\n    )\n}\n\nexport default BackButton","import React, { Component } from 'react'\nimport { EditorState, Editor, convertFromRaw } from 'draft-js'\nimport moment from 'moment'\nimport axios from 'axios'\nimport { FaEdit, FaSave, FaTrash, FaUndo } from 'react-icons/fa'\n\nimport InRecipeTextEditor from '../utils/InRecipeTextEditor'\nimport BackButton from '../utils/BackButton'\n\n\n\nclass Recipe extends Component {\n    state = {\n        editing: false,\n        title: null,\n        detailsForUpload: null,\n        image: null,\n        imageUrl: null,\n    }\n\n    onEditHandler = () => {\n        this.setState({\n            editing: !this.state.editing\n        })\n    }\n\n    deleteHandler = async () => {\n        let confirmation = window.confirm('Are you sure you would like to delete this recipe? This cannot be undone.')\n        if (confirmation) {\n            await axios.delete(`/recipes/delete-recipe/${this.props.selectedRecipe[0].id}`)\n            .then(res => {\n                console.log('successfully delete', res.data)\n                this.props.history.push(`/`)\n                }\n            )\n        }\n    }\n\n    setStateDetailsForUpload = () => {\n        this.setState({\n            detailsForUpload: this.props.editedDetails,\n        })\n    }\n\n    // onTextEditorChangeHandler = (uploadDetails) => {\n    //         this.setState({\n    //             detailsForUpload: uploadDetails\n    //         })\n    //     }\n\n    onSaveHandler = async (e) => {\n        e.preventDefault()\n        await this.setStateDetailsForUpload()\n        console.log('STATE DETAILS FOR UPLOAD',this.state.detailsForUpload)\n        console.log('EDITED DETAILS FOR UPLOAD',this.props.editedDetails)\n        // FINISH BUILDING THIS OUT\n        // this.state.detailsForUpload are showing 'null'\n\n        const formData = {\n            title: this.state.title !== null ? this.state.title : this.props.selectedRecipe[0].recipe_title,\n            details: this.state.detailsForUpload !== null ? this.state.detailsForUpload : this.props.selectedRecipe[0].recipe_details,\n            photo: this.state.imageUrl !== null ? this.state.imageUrl : this.props.selectedRecipe[0].recipe_photo,\n        }\n        console.log('formData', formData)\n\n        await axios.post(`/recipes/edit/${this.props.selectedRecipe[0].id}`, formData)\n        .then(res => {\n            console.log('Response Data', res.data)\n            console.log('The file was successfully uploaded')\n            \n            this.setState({\n                editing: false,\n            })\n\n            this.props.history.push(`/`)\n\n        })\n        .catch(err => err)\n    }\n    // UPDATE FOR THIS COMPONENT\n    onTitleChangeHandler = (e) => {\n        this.setState({\n            title: e.target.value,\n        })\n    }\n    onImageUrlChangeHandler = (e) => {\n        this.setState({\n            imageUrl: e.target.value,\n            })\n    }\n\n    render() {\n        const recipeData = this.props.selectedRecipe\n\n        let recipe = recipeData ? recipeData.map(recipe => {\n            const details = this.state.editing ? <InRecipeTextEditor \n                                                    onTextEditorChangeHandlerEdit={this.props.onTextEditorChangeHandlerEdit}\n                                                    editedDetails={EditorState.createWithContent(convertFromRaw(JSON.parse(recipe.recipe_details)))}\n                                                /> \n                                                : <Editor \n                                                    editorState={EditorState.createWithContent(convertFromRaw(JSON.parse(recipe.recipe_details)))}\n                                                    readOnly={true}\n                                                />\n            // const image = recipe.recipe_photo || !recipe.recipe_photo ? this.state.editing ? <input id='imageUrl' defaultValue={recipe.recipe_photo} className='Input imageUrlInput' onChange={this.onImageUrlChangeHandler}/> : <img className='recipeImage'src={recipe.recipe_photo} alt=\"Sample\"/>  : recipe.recipe_photo ? <img className='recipeImage'src={recipe.recipe_photo} alt=\"Sample\"/> : null\n\n            const title = this.state.editing ? <input id='title' defaultValue={recipe.recipe_title} placeholder='What is the title of your dish?' className='Input' onChange={this.onTitleChangeHandler} type=\"text\" required/> : <h3>{recipe.recipe_title}</h3>\n                        \n            let image = null\n            if (recipe.recipe_photo || !recipe.recipe_photo) {\n                if (this.state.editing) {\n                    image = <input id='imageUrl' placeholder='Enter image URL' defaultValue={recipe.recipe_photo} className='Input imageUrlInput' onChange={this.onImageUrlChangeHandler}/>\n                } else {\n                    if(recipe.recipe_photo) {\n                        image = <img className='recipeImage'src={recipe.recipe_photo} alt=\"Sample\"/>\n                    } else {\n                        image = null\n                    }\n                }\n            }\n            let date = this.state.editing ? null : <p className='recipeAddedDate'><b>Recipe added:</b> {moment(recipe.recipe_added_date).format('LL')}</p>\n\n            let editDiscard = this.state.editing ? <FaUndo className='editButton' title='Undo' onClick={this.onEditHandler}/> : <FaEdit className='editButton' title='Edit' onClick={this.onEditHandler}/>\n\n            return(\n                <div key={recipe.id}>\n                    \n                    <div className='button-container'>\n                        {editDiscard}\n                        <FaTrash className='deleteButton' title='Delete' onClick={this.deleteHandler} style={!this.state.editing ? null : null}/>\n                    </div>\n                    <form action={`/recipes/edit/${this.props.selectedRecipe[0].id}`} className='editRecipeForm' encType=\"multipart/form-data\" method=\"post\" onSubmit={this.onSaveHandler}>\n                        <div className='saveButtonContainer'>\n                            <button type='submit' className='saveButtonInnerContainer' title='Save changes' style={this.state.editing ? null : { display: 'none' }}><FaSave className='saveButton'/></button>\n                        </div>\n                        {title}\n                        {date}\n                        {image}\n                        <div className='recipeDetails'>\n                            {details}\n                        </div>\n                    </form>\n                </div>\n    \n            )\n        }) : null\n    \n        if(recipeData === null){\n            this.props.history.push('/')\n        }\n    \n        return(\n            <div>\n                <BackButton handleClickedBackButton={this.props.handleClickedBackButton}/>\n\n            <div className='recipeContainer'>\n                {recipe}\n            </div>\n            </div>\n        )\n\n    }\n}\n\nexport default Recipe","import React from 'react'\n\n\nconst SearchBar = (props) =>{\n\n    let search = props.recipes === null || props.recipes.length === 0 ? <p>Click the pulsating button in the top right to add your first recipe.</p> : <input value={props.search} placeholder='Search Recipes...' className='searchBar Input' onChange={props.handleSearch} autoFocus=\"autofocus\"/>\n    \n    return(\n        <div>\n            {props.recipes === null ? null : search}\n            {/* <input value={props.search} placeholder='Search...' className='searchBar Input' onChange={props.handleSearch} autofocus=\"autofocus\"/> */}\n            \n        </div>\n    )\n}\n\nexport default SearchBar","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport SearchBar from '../utils/SearchBar'\n\n\nconst Nav = (props) => {\n    let history = props.history ? props.history : null\n    let classes = props.recipes === null || props.recipes.length === 0 ? 'addRecipe pulse' : 'addRecipe'\n    let addNew = props.loggedIn ? <NavLink to='/new-recipe' title='Add New Recipe' className={classes}>+</NavLink> : null\n    let logOut = props.loggedIn ? <NavLink to='/login' className='signOut' onClick={props.handleSignOut}>Sign out</NavLink> : null\n    let clearSearchClass = props.search.length > 0 ? 'clearSearch': 'hideClearSearch'\n    \n    let search = history === '/' ? \n        <div className='searchBarContainer'>\n            <SearchBar \n                search={props.search}\n                handleSearch={props.handleSearch}\n                recipes={props.recipes}\n            />\n            <div className={clearSearchClass} onClick={props.handleClearSearchBar}>clear</div>\n        </div>\n    \n    : null\n\n    \n    return (\n        <div className='navContainer container'>\n            <div className='navContainer'>\n                <NavLink to='/' className='titleLogo'><img alt=\"Chef Caitlin\" src=\"./media/PM-168.png\" className='chef-icon'/><h1 className='title'>C's Recipes</h1></NavLink>\n                <ul>\n                    {addNew}\n                </ul>\n                    {logOut}\n            </div>\n            {search}\n        </div>\n    )\n}\n\nexport default Nav","import React, { Component } from 'react'\nimport { Editor, EditorState, RichUtils, convertToRaw } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n// import Editor from 'draft-js-plugins-editor'\n\n// import createHighlightPlugin from './plugins/highlightPlugin'\n// import addLinkPlugin from './plugins/addLinkPlugin'\nimport BlockStyleToolbar, { getBlockStyle } from './blockStyles/BlockStyleToolbar'\n\n// const highlightPlugin = createHighlightPlugin();\n\n\nclass TextEditor extends Component {\n    state = {\n        editorState: EditorState.createEmpty(),\n    }\n\n    // plugins = [\n    //     highlightPlugin,\n    //     addLinkPlugin\n    // ]\n\n    onChange = (editorState) => {\n        let contentState = this.state.editorState.getCurrentContent()\n        let uploadDetails = convertToRaw(contentState)\n        uploadDetails[\"content\"] = JSON.stringify(uploadDetails.content)\n\n        this.setState({\n            editorState\n        }, this.props.onTextEditorChangeHandler(uploadDetails))\n        // }, this.props.onTextEditorChangeHandler(this.state.editorState, uploadDetails))\n    }\n\n    handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(this.state.editorState, command)\n        if (newState) {\n            this.onChange(newState)\n            return 'handled'\n        }\n        return 'not-handled'\n    }\n\n    onUnderlineClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'))\n    }\n    onBoldClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'))\n    }\n    onItalicClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'))\n    }\n    // onHighlightClick = (e) => {\n    //     e.preventDefault()\n    //     this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'HIGHLIGHT'))\n    // }\n\n    toggleBlockType = (blockType) => {\n        this.onChange(RichUtils.toggleBlockType(this.state.editorState, blockType))\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <button className=\"formatButtons\" onClick={this.onUnderlineClick} title='underline'><u>U</u></button>\n                    <button className=\"formatButtons\" onClick={this.onBoldClick} title='bold'><b>B</b></button>\n                    <button className=\"formatButtons\" onClick={this.onItalicClick} title='italics'><em>I</em></button>\n                    {/* <button className=\"highlight\" onClick={this.onHighlightClick} title='highlight'><span style={{background: 'yellow'}}>H</span></button> */}\n                    <BlockStyleToolbar\n                        editorState={this.state.editorState}\n                        onToggle={this.toggleBlockType}\n                    />\n                </div>\n                <div className=\"editors\">\n                    <Editor \n                        blockStyleFn={getBlockStyle}\n                        editorState={this.state.editorState}\n                        handleKeyCommand={this.handleKeyCommand}\n                        onChange={this.onChange}\n                        // plugins={this.plugins}\n                        placeholder='Recipe steps and ingredients'\n                        spellCheck={true}\n                        readOnly={false}\n                        required={true}\n                    />\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextEditor","import React, {Component} from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { FaSave } from 'react-icons/fa'\n\n\n\nimport BackButton from '../utils/BackButton'\n// import PhotoUploader from '../utils/PhotoUploader'\nimport TextEditor from '../utils/TextEditor'\n\nclass AddRecipeForm extends Component {\n    state = {\n        newRecipe: {\n            title: '',\n            date: null,\n            details: '',\n            user_id: null,\n        },\n        image: null,\n        imageUrl: null,\n        detailsForUpload: null\n    }\n\n    onTitleChangeHandler = (e) => {\n        this.setState({\n            newRecipe: {\n                ...this.state.newRecipe,\n                title: e.target.value,\n            }\n        }, console.log(this.state.newRecipe))\n    }\n    onImageUrlChangeHandler = (e) => {\n        this.setState({\n            imageUrl: e.target.value,\n            })\n    }\n    onTextEditorChangeHandler = (uploadDetails) => {\n    // onTextEditorChangeHandler = (state, uploadDetails) => {\n        this.setState({\n            // newRecipe: {\n            //     ...this.state.newRecipe,\n            //     details: state,\n            // },\n            detailsForUpload: uploadDetails\n        })\n    }\n\n    // onImageChangeHandler = (e) => {\n    //     console.log(e.target.files[0])\n    //     this.setState({\n    //             image: e.target.files[0],\n    //     })\n    // }\n\n    onSubmitHandler = (e) => {\n        e.preventDefault()\n\n        // const photoData = new FormData()\n        // const file = this.state.image ? this.state.image.name : null\n        // photoData.append(\"file\", file)\n        // axios.post('/recipes/photo-uploader', photoData, {\n        //     headers: { \n        //         'Content-Type': 'multipart/form-data',\n        //     }\n        // })\n        // .then(res => {\n        //     console.log('response from file upload',res)\n        // })\n        // .catch(err => err)\n\n        const formData = {\n            title: this.state.newRecipe.title,\n            date: moment().format('l'),\n            details: this.state.detailsForUpload,\n            photo: this.state.image ? `public/uploads/IMAGE-${Date.now()}-${this.state.image.name}` : this.state.imageUrl ? this.state.imageUrl : null,\n            // retrieve user_id from JWT?\n            user_id: this.props.user.id,\n        }\n        console.log('formData', formData)\n\n        axios.post('/recipes/add-new-recipe', formData)\n        .then(res => {\n            console.log('This file was successfully uploaded', res.data)\n\n            this.props.history.push('/')\n        })\n        .catch(err => err)\n    }\n\n\n    render() {\n        console.log('DETAILS FOR UPLOAD', this.state.detailsForUpload)\n        return (\n            <div>\n                <BackButton handleClickedBackButton={this.props.handleClickedBackButton}/>\n                <div className='recipeFormContainer'>\n                    <form action='/recipes/add-new-recipe' className='form' encType=\"multipart/form-data\" method=\"post\" onSubmit={this.onSubmitHandler}>\n                        <div>\n                            <label className='recipeTitleInput Label'>Title</label>\n                            <input id='title' value={this.state.newRecipe.title} placeholder='What is the title of your dish?' className='Input' onChange={this.onTitleChangeHandler} type=\"text\" required/>\n                        </div>\n\n                        <div>\n                            <label className='recipeDetailsInput Label'>Recipe</label>\n                            {/* <textarea id='details' value={this.state.newRecipe.details} className='Input' placeholder='Enter ingredients, timing and recipe steps...' onChange={this.onChangeHandler} rows='10'/> */}\n                            <TextEditor onTextEditorChangeHandler={this.onTextEditorChangeHandler}/>\n                        </div>\n                        <div>\n                            {/* <label className='recipeTitleInput Label'>Title</label> */}\n                            <label for='url' className='recipeTitleInput Label'>Image</label>\n                            <input id='imageUrl' type='url' name='url' value={this.state.newRecipe.imageUrl} placeholder='Enter image URL' className='Input imageUrlInput' onChange={this.onImageUrlChangeHandler}/>\n                        </div>\n                        {/* <PhotoUploader handleImageSelect={this.onImageChangeHandler} image={this.state.image}/> */}\n                        {/* <button type='submit' className='submitButton'>Save</button> */}\n                        <button type='submit' className='submitButton saveButtonInnerContainer' title='Save Recipe'><FaSave className='saveButton'/></button>\n\n\n                    </form>\n                </div>\n\n\n            </div>\n        )\n\n    }\n}\n\nexport default AddRecipeForm","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { NavLink } from 'react-router-dom'\n\n\nclass Register extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        failedRegistrationMessage: null,\n    }\n\n    handleInputChange = (e) => {\n        let fieldId = e.target.id\n\n        this.setState({\n            [fieldId]: e.target.value\n        })\n    }\n\n    handleInputSubmit = (e) => {\n        e.preventDefault()\n        let formData = {\n            first: this.state.firstName,\n            last: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password,\n        }\n        console.log('formData',formData)\n\n        axios.post('/users/add-new-user', formData)\n        .then(async res => {\n            console.log('from register', res.data)\n            if (res.data.id) {\n                await this.props.checkForSession()\n                console.log('The user was successfully registered')\n                this.props.history.push('/')\n            } else {\n                this.setState({\n                    failedRegistrationMessage: <p className='unsuccessful'>Email address is taken. Please try again.</p>\n                })\n            }\n            \n\n        })\n        .catch(err => err)\n\n    }\n\n    render() {\n\n        return(\n            <div>\n                <h2 className='loginregisterTitle'>Register</h2>\n                <p className='or'>or</p>\n                <NavLink to='/login' className='switchRegisterLogin'>Log in</NavLink>\n                <form className='form loginRegisterForm' action='/users/add-new-user' encType=\"multipart/form-data\" method=\"post\" onSubmit={this.handleInputSubmit}>\n                    <label className='login-register-label Label'>First Name</label>\n                    <input id='firstName' value={this.state.firstName} placeholder='ex. John' className='Input imageUrlInput' onChange={this.handleInputChange} required/>\n                    \n                    <label className='login-register-label Label'>Last Name</label>\n                    <input id='lastName' value={this.state.lastName} placeholder='ex. Appleseed' className='Input imageUrlInput' onChange={this.handleInputChange} required/>\n                    \n                    <label className='login-register-label Label'>Email</label>\n                    <input id='email' type=\"email\" value={this.state.email} placeholder='ex. example@email.com' className='Input imageUrlInput' onChange={this.handleInputChange} required/>\n                    \n                    <label className='login-register-label Label'>Password</label>\n                    <input id='password' type=\"password\" value={this.state.password} placeholder='be as complex as possible' className='Input imageUrlInput' onChange={this.handleInputChange} required/>\n                    \n                    <button type='submit' className='submitButton'>Register</button>\n                    {this.state.failedRegistrationMessage}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Register","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { NavLink } from 'react-router-dom'\n\n\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        failedLoginMessage: null,\n    }\n\n    handleInputChange = (e) => {\n        let fieldId = e.target.id\n\n        this.setState({\n            [fieldId]: e.target.value\n        })\n    }\n\n    handleInputSubmit = (e) => {\n        e.preventDefault()\n        let formData = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n        console.log('formData',formData)\n\n        axios.post('/users/login', formData)\n        .then(async res => {\n            console.log('DATA', res.data)\n            if(res.data.id){\n                await this.props.checkForSession()\n                console.log('The user was successfully logged in')\n                this.props.history.push('/')\n            } else {\n                this.setState({\n                    failedLoginMessage: <p className='unsuccessful'>Email and/or password is incorrect.</p>\n                })\n            }\n        })\n        .catch(err => err)\n\n    }\n\n    render() {\n\n        return(\n            <div>\n                <h2 className='loginregisterTitle'>Log in</h2>\n                <p className='or'>or</p>\n                <NavLink to='/register' className='switchRegisterLogin'>Register</NavLink>\n                <form className='form loginRegisterForm' action='/users/login' encType=\"multipart/form-data\" method=\"post\" onSubmit={this.handleInputSubmit}>\n                    <label className='login-register-label Label'>Email</label>\n                    <input id='email' type=\"email\" value={this.state.email} placeholder='enter email' className='Input imageUrlInput' onChange={this.handleInputChange} required/>\n                    \n                    <label className='login-register-label Label'>Password</label>\n                    <input id='password' type=\"password\" value={this.state.password} placeholder='enter password' className='Input imageUrlInput' onChange={this.handleInputChange} required/>\n                    \n                    <button type='submit' className='submitButton'>Log in</button>\n                    {this.state.failedLoginMessage}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login","import React, {Component} from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\n\nimport './App.css';\n// import Dashboard from './containers/Dashboard'\nimport Recipes from './components/Recipes'\nimport Recipe from './components/Recipe'\nimport Nav from './containers/Nav'\nimport AddRecipeForm from './components/AddRecipeForm'\nimport Register from './components/Register'\nimport Login from './components/Login'\n// import SearchBar from './utils/SearchBar'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    console.log('constructor')\n  }\n  state = {\n    recipes: null,\n    selectedRecipe: null,\n    editedDetails: null,\n    search: '',\n    user: null,\n    loggedIn: false,\n    loading: true,\n    history: null,\n}\n\n// shouldComponentUpdate(prevProps, prevState){\n//   console.log('shouldComponentUpdate')\n//   console.log('Does state match prevState?', this.state.recipes === prevState.recipes)\n//   return this.state.recipes !== prevState.recipes\n// }\n\ncomponentDidMount() {\n  console.log('componentDidMount')\n  this.checkForSession()\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n  console.log('componentDidUpdate')\n  if (prevState.history !== this.props.history.location.pathname) {\n    this.setHistoryState()\n\n  }\n\n  if(prevState.recipes !== null && prevState.recipes === this.state.recipes) {\n    this.handleGetRecipes()\n  }\n}\n\nsetHistoryState = () => {\n  this.setState({\n    history: this.props.history.location.pathname\n  })\n}\n\nhandleLoading = () => {\n  this.setState({\n    loading: false,\n  })\n}\n\nsetUserState = (userData) => {\n  this.setState({\n    user: userData,\n    loggedIn: true,\n  })\n}\n\ncheckForSession = () => {\n  axios.get('/session')\n  .then ( async res => {\n    if(res.data.id){\n      this.setUserState(res.data)\n    }\n    if(res.data.message){\n      console.log('not loading session fast enough')\n      this.handleLoading()\n    }\n    console.log('res.data',res.data)\n  })\n  // console.log('state user', this.state.user)\n  .then(() => {\n    if(this.state.user){\n      console.log('getting recipes after session check')\n      this.handleGetRecipes()\n      this.handleLoading()\n    }\n  })\n\n}\n\nhandleGetRecipes() {\n  axios.get(`/recipes/allrecipes`)\n    .then(res => {\n      console.log('RECIPES',res.data)\n      if(res.data !== this.state.recipes){\n        const recipesData = res.data\n        this.setState({\n            recipes: recipesData,\n        })\n      }\n    })\n    .catch (err => err)\n}\n\nclickedRecipeHandler = (recipeId) => {\n    let recipe = this.state.recipes.filter(rec => {\n        return rec.id === recipeId\n    })\n    this.setState({\n        selectedRecipe: recipe\n    }, () => this.props.history.push(`/recipe/${recipeId}`))  \n}\n\nclickedBackButtonHandler = () => {\n  this.props.history.push('/')\n}\n\nonTextEditorChangeHandlerEdit = (editedDetails) => {\n      this.setState({\n          editedDetails\n      })\n    }\n\nhandleSearch = (e) => {\n  this.setState({\n    search: e.target.value\n  })\n}\n\nhandleClearSearchBar = () => {\n  this.setState({\n    search: '',\n  })\n}\n\nhandleSignOut = () => {\n  axios.delete('/users/logout')\n  .then(\n    this.setState({\n      loggedIn: false,\n      user: null,\n    })\n  )\n}\n\n\n  render() {\n  console.log('render')\n  console.log('HISTORY', this.props.history.location.pathname)\n\n    let routes = null\n\n      if(this.state.loggedIn && !this.state.loading) {\n        // PRIVATE ROUTES\n        routes = (\n          <div>\n            <Route\n              path={'/recipe/:id'}\n              render={(props) => <Recipe \n                              {...props} \n                              selectedRecipe={this.state.selectedRecipe}\n                              editedDetails={this.state.editedDetails}\n                              handleClickedBackButton={this.clickedBackButtonHandler}\n                              onTextEditorChangeHandlerEdit={this.onTextEditorChangeHandlerEdit}/>} />\n            <Route\n              path={'/new-recipe'}\n              render={(props) => <AddRecipeForm\n                                  {...props}\n                                  user={this.state.user}\n                                  handleClickedBackButton={this.clickedBackButtonHandler}/>} />\n            <Route \n              path={'/'} exact \n              render={(props) => <Recipes \n                              {...props} \n                              recipes={this.state.recipes}\n                              search={this.state.search}\n                              handleSearch={this.handleSearch}\n                              handleClearSearchBar={this.handleClearSearchBar}\n                              handleClickedRecipe={this.clickedRecipeHandler}/>} />\n            <Redirect to='/' />  \n          </div>\n        )\n      } \n      if (!this.state.loggedIn && !this.state.loading) {\n        // PUBLIC ROUTES\n        routes = (\n          <div>\n            <Route\n              path={'/register'}\n              render={(props) => <Register\n                              {...props}\n                              checkForSession={this.checkForSession}\n                              />}\n            />\n            <Route\n              path={'/login'}\n              render={(props) => <Login\n                              {...props}\n                              checkForSession={this.checkForSession}\n                              />}\n            />\n            <Redirect to='/login' />\n        </div>\n        )\n      }\n\n    return (\n      <div className=\"App\">\n        <Nav \n          loggedIn={this.state.loggedIn} \n          recipes={this.state.recipes} \n          handleSignOut={this.handleSignOut}\n          search={this.state.search}\n          handleSearch={this.handleSearch}\n          history={this.state.history}\n          handleClearSearchBar={this.handleClearSearchBar}/>\n        <div className='body'>\n        {routes}\n\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}