{"version":3,"sources":["components/Recipes.js","utils/blockStyles/HeaderStyleDropdown.js","utils/blockStyles/BlockStyleButton.js","utils/blockStyles/BlockStyleToolbar.js","utils/InRecipeTextEditor.js","utils/BackButton.js","components/Recipe.js","utils/SearchBar.js","containers/Nav.js","utils/TextEditor.js","components/AddRecipeForm.js","components/Register.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Recipes","props","recipesData","recipes","filteredRecipes","filter","recipe","recipe_title","toLowerCase","includes","search","map","image","recipe_photo","src","alt","className","key","id","onClick","handleClickedRecipe","HeaderStyleDropdown","onToggle","event","value","target","this","active","onChange","headerOptions","heading","style","Object","values","label","React","Component","BlockStyleButton","e","preventDefault","title","BLOCK_TYPES","BLOCK_TYPE_HEADINGS","getBlockStyle","block","getType","BlockStyleToolbar","editorState","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","s","type","TextEditor","state","editedDetails","contentState","uploadDetails","convertToRaw","JSON","stringify","content","setState","onTextEditorChangeHandlerEdit","handleKeyCommand","command","newState","RichUtils","onUnderlineClick","toggleInlineStyle","onBoldClick","onItalicClick","toggleBlockType","blockStyleFn","placeholder","spellCheck","readOnly","BackButton","handleClickedBackButton","Recipe","editing","detailsForUpload","imageUrl","onEditHandler","deleteHandler","a","window","confirm","axios","delete","selectedRecipe","then","res","console","log","data","history","push","setStateDetailsForUpload","onSaveHandler","formData","details","recipe_details","photo","post","catch","err","onTitleChangeHandler","onImageUrlChangeHandler","recipeData","InRecipeTextEditor","EditorState","createWithContent","convertFromRaw","parse","defaultValue","required","date","moment","recipe_added_date","format","editDiscard","action","encType","method","onSubmit","display","SearchBar","length","handleSearch","autoFocus","Nav","classes","addNew","loggedIn","to","logOut","handleSignOut","clearSearchClass","handleClearSearchBar","route","createEmpty","onTextEditorChangeHandler","AddRecipeForm","newRecipe","user_id","formValidated","onSubmitHandler","Date","now","name","userId","htmlFor","Register","firstName","lastName","email","password","failedRegistrationMessage","handleInputChange","fieldId","handleInputSubmit","first","last","checkForSession","Login","failedLoginMessage","verified","App","loading","setHistoryState","location","pathname","handleLoading","setUserState","get","message","handleGetRecipes","clickedRecipeHandler","recipeId","rec","scrollTo","clickedBackButtonHandler","prevProps","prevState","routes","path","render","exact","withRouter","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.041d2f6f.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Recipes = (props) => {\n\n    const recipesData = props.recipes\n\n    let filteredRecipes = recipesData ? recipesData.filter(recipe => {\n        return recipe.recipe_title.toLowerCase().includes(props.search.toLowerCase())\n    }) : null\n\n    let recipes = recipesData ? props.search ? filteredRecipes.map(recipe => {\n        const image = recipe.recipe_photo ? <img src={recipe.recipe_photo} alt={recipe.recipe_title}/>  : null\n        return(\n            <article className=\"card\" key={recipe.id} onClick={() => props.handleClickedRecipe(recipe.id)}>\n                {image}\n                <div className=\"recipeTitle\">\n                    <h3>{recipe.recipe_title}</h3>\n                </div>\n            </article>\n        )\n    })\n    :\n    recipesData.map(recipe => {\n        const image = recipe.recipe_photo ? <img src={recipe.recipe_photo} alt=\"Sample\"/>  : null\n        return(\n            <article className=\"card\" key={recipe.id} onClick={() => props.handleClickedRecipe(recipe.id)}>\n                {image}\n                <div className=\"recipeTitle\">\n                    <h3>{recipe.recipe_title}</h3>\n                </div>\n            </article>\n        )\n    }) : null\n\n    return(\n        <div>\n            <div className='cards'>\n                {recipes}\n            </div>\n\n        </div>\n\n        \n    )\n}\n\nexport default Recipes","import React from \"react\";\nclass HeaderStyleDropdown extends React.Component {\n\n    onToggle = event => {\n        let value = event.target.value\n        this.props.onToggle(value)\n    }\n    \n    render() {\n        return (\n        <select value={this.props.active} onChange={this.onToggle} className=\"formatButtons\">\n            <option value=\"\">Header Levels</option>\n            {this.props.headerOptions.map(heading => {\n            return (\n                <option value={heading.style} key={Object.values(heading)}>\n                {heading.label}\n                </option>\n            )})}\n        </select>\n    )}\n}\nexport default HeaderStyleDropdown","import React from \"react\"\nclass BlockStyleButton extends React.Component {\n    onToggle = (e) => {\n        e.preventDefault()\n        this.props.onToggle(this.props.style)\n    }\n    render() {\n        let className = \"RichEditor-styleButton formatButtons\"\n        if (this.props.active) {\n        className += \" RichEditor-activeButton\"\n        }\n    return (\n            <button className={className} onClick={this.onToggle} title={this.props.style}>\n                {this.props.label}\n            </button>\n        );\n    }\n}\nexport default BlockStyleButton","import React from \"react\";\nimport HeaderStyleDropdown from './HeaderStyleDropdown'\nimport BlockStyleButton from './BlockStyleButton'\n\nexport const BLOCK_TYPES = [\n    { label: \" “ ” \", style: \"blockquote\" },\n    { label: \"UL\", style: \"unordered-list-item\" },\n    { label: \"OL\", style: \"ordered-list-item\" },\n    { label: \"{ }\", style: 'code-block' }\n];\nexport const BLOCK_TYPE_HEADINGS = [\n    { label: \"H1\", style: \"header-one\" },\n    { label: \"H2\", style: \"header-two\" },\n    { label: \"H3\", style: \"header-three\" },\n    { label: \"H4\", style: \"header-four\" },\n    { label: \"H5\", style: \"header-five\" },\n    { label: \"H6\", style: \"header-six\" }\n]\n\nexport function getBlockStyle(block) {\n    switch (block.getType()) {\n        case \"blockquote\":\n            return \"RichEditor-blockquote\";\n        default:\n            return null;\n    }\n}\n\nclass BlockStyleToolbar extends React.Component {\n    render() {\n        const { editorState } = this.props;\n        const selection = editorState.getSelection();\n        const blockType = editorState\n        .getCurrentContent()\n        .getBlockForKey(selection.getStartKey())\n        .getType();\n        \n        return (\n        <div className='blockStyleToolBar'>\n        <span className=\"RichEditor-controls\">\n            <HeaderStyleDropdown\n            headerOptions={BLOCK_TYPE_HEADINGS}\n            active={blockType}s\n            onToggle={this.props.onToggle}\n            />\n            \n            {BLOCK_TYPES.map(type => {\n            return (\n            <BlockStyleButton\n            active={type.style === blockType}\n            label={type.label}\n            onToggle={this.props.onToggle}\n            style={type.style}\n            key={type.label}\n            type={type}\n            />\n            );\n            })}\n        </span>\n        </div>\n        );\n    }\n}\n\nexport default BlockStyleToolbar","import React, { Component } from 'react'\nimport { Editor, RichUtils, convertToRaw } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nimport BlockStyleToolbar, { getBlockStyle } from './blockStyles/BlockStyleToolbar'\n\n\nclass TextEditor extends Component {\n    state = {\n        editorState: this.props.editedDetails,\n    }\n\n\n    onChange = (editorState) => {\n        let contentState = this.state.editorState.getCurrentContent()\n        let uploadDetails = convertToRaw(contentState)\n        uploadDetails[\"content\"] = JSON.stringify(uploadDetails.content)\n\n        this.setState({\n            editorState\n        }, this.props.onTextEditorChangeHandlerEdit(uploadDetails))\n    }\n\n    handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(this.state.editorState, command)\n        if (newState) {\n            this.onChange(newState)\n            return 'handled'\n        }\n        return 'not-handled'\n    }\n\n    onUnderlineClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'))\n    }\n    onBoldClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'))\n    }\n    onItalicClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'))\n    }\n\n    toggleBlockType = (blockType) => {\n        this.onChange(RichUtils.toggleBlockType(this.state.editorState, blockType))\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='formatButtonsContainer'>\n                    <button className=\"formatButtons\" onClick={this.onUnderlineClick} title='underline'><u>U</u></button>\n                    <button className=\"formatButtons\" onClick={this.onBoldClick} title='bold'><b>B</b></button>\n                    <button className=\"formatButtons\" onClick={this.onItalicClick} title='italics'><em>I</em></button>\n                    <BlockStyleToolbar\n                        editorState={this.state.editorState}\n                        onToggle={this.toggleBlockType}\n                    />\n                </div>\n                <div className=\"editors\">\n                    <Editor \n                        blockStyleFn={getBlockStyle}\n                        editorState={this.state.editorState}\n                        handleKeyCommand={this.handleKeyCommand}\n                        onChange={this.onChange}\n                        placeholder='Enter ingredients, timing and recipe steps...'\n                        spellCheck\n                        readOnly={false}\n                    />\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextEditor","import React from 'react'\n\nlet BackButton = (props) => {\n    return (\n        <div className=\"backButton-container\">\n            <div className=\"arrow arrow--left\" onClick={props.handleClickedBackButton}></div>\n        </div>\n    )\n}\n\nexport default BackButton","import React, { Component } from 'react'\nimport { EditorState, Editor, convertFromRaw } from 'draft-js'\nimport moment from 'moment'\nimport axios from 'axios'\nimport { FaEdit, FaSave, FaTrash, FaUndo } from 'react-icons/fa'\n\nimport InRecipeTextEditor from '../utils/InRecipeTextEditor'\nimport BackButton from '../utils/BackButton'\n\n\n\nclass Recipe extends Component {\n    state = {\n        editing: false,\n        title: null,\n        detailsForUpload: null,\n        image: null,\n        imageUrl: null,\n    }\n\n    onEditHandler = () => {\n        this.setState({\n            editing: !this.state.editing\n        })\n    }\n\n    deleteHandler = async () => {\n        let confirmation = window.confirm('Are you sure you would like to delete this recipe? This cannot be undone.')\n        if (confirmation) {\n            await axios.delete(`/recipes/delete-recipe/${this.props.selectedRecipe[0].id}`)\n            .then(res => {\n                console.log('successfully delete', res.data)\n                this.props.history.push(`/`)\n                }\n            )\n        }\n    }\n\n    setStateDetailsForUpload = () => {\n        this.setState({\n            detailsForUpload: this.props.editedDetails,\n        })\n    }\n\n    // onTextEditorChangeHandler = (uploadDetails) => {\n    //         this.setState({\n    //             detailsForUpload: uploadDetails\n    //         })\n    //     }\n\n    onSaveHandler = async (e) => {\n        e.preventDefault()\n        await this.setStateDetailsForUpload()\n        // console.log('STATE DETAILS FOR UPLOAD',this.state.detailsForUpload)\n        // console.log('EDITED DETAILS FOR UPLOAD',this.props.editedDetails)\n        // FINISH BUILDING THIS OUT\n        // this.state.detailsForUpload are showing 'null'\n\n        const formData = {\n            title: this.state.title !== null ? this.state.title : this.props.selectedRecipe[0].recipe_title,\n            details: this.state.detailsForUpload !== null ? this.state.detailsForUpload : this.props.selectedRecipe[0].recipe_details,\n            photo: this.state.imageUrl !== null ? this.state.imageUrl : this.props.selectedRecipe[0].recipe_photo,\n        }\n        // console.log('formData', formData)\n\n        await axios.post(`/recipes/edit/${this.props.selectedRecipe[0].id}`, formData)\n        .then(res => {\n            // console.log('Response Data', res.data)\n            // console.log('The file was successfully uploaded')\n            \n            this.setState({\n                editing: false,\n            })\n\n            this.props.history.push(`/`)\n\n        })\n        .catch(err => err)\n    }\n    // UPDATE FOR THIS COMPONENT\n    onTitleChangeHandler = (e) => {\n        this.setState({\n            title: e.target.value,\n        })\n    }\n    onImageUrlChangeHandler = (e) => {\n        this.setState({\n            imageUrl: e.target.value,\n            })\n    }\n\n    render() {\n        const recipeData = this.props.selectedRecipe\n\n        let recipe = recipeData ? recipeData.map(recipe => {\n            const details = this.state.editing ? <InRecipeTextEditor \n                                                    onTextEditorChangeHandlerEdit={this.props.onTextEditorChangeHandlerEdit}\n                                                    editedDetails={EditorState.createWithContent(convertFromRaw(JSON.parse(recipe.recipe_details)))}\n                                                /> \n                                                : <Editor \n                                                    editorState={EditorState.createWithContent(convertFromRaw(JSON.parse(recipe.recipe_details)))}\n                                                    readOnly={true}\n                                                />\n            // const image = recipe.recipe_photo || !recipe.recipe_photo ? this.state.editing ? <input id='imageUrl' defaultValue={recipe.recipe_photo} className='Input imageUrlInput' onChange={this.onImageUrlChangeHandler}/> : <img className='recipeImage'src={recipe.recipe_photo} alt=\"Sample\"/>  : recipe.recipe_photo ? <img className='recipeImage'src={recipe.recipe_photo} alt=\"Sample\"/> : null\n\n            const title = this.state.editing ? <input id='title' defaultValue={recipe.recipe_title} placeholder='What is the title of your dish?' className='Input' onChange={this.onTitleChangeHandler} type=\"text\" required/> : <h3 className='inner-recipe-title'>{recipe.recipe_title}</h3>\n                        \n            let image = null\n            if (recipe.recipe_photo || !recipe.recipe_photo) {\n                if (this.state.editing) {\n                    image = <input id='imageUrl' placeholder='Enter image URL' defaultValue={recipe.recipe_photo} className='Input imageUrlInput' onChange={this.onImageUrlChangeHandler}/>\n                } else {\n                    if(recipe.recipe_photo) {\n                        image = <img className='recipeImage'src={recipe.recipe_photo} alt=\"Sample\"/>\n                    } else {\n                        image = null\n                    }\n                }\n            }\n            let date = this.state.editing ? null : <p className='recipeAddedDate'><b>Recipe added:</b> {moment(recipe.recipe_added_date).format('LL')}</p>\n\n            let editDiscard = this.state.editing ? <FaUndo className='editButton' title='Undo' onClick={this.onEditHandler}/> : <FaEdit className='editButton' title='Edit' onClick={this.onEditHandler}/>\n            \n            return(\n                <div key={recipe.id}>\n                    \n                    <div className='button-container'>\n                        {editDiscard}\n                        <FaTrash className='deleteButton' title='Delete' onClick={this.deleteHandler} style={!this.state.editing ? null : null}/>\n                    </div>\n                    <form action={`/recipes/edit/${this.props.selectedRecipe[0].id}`} className='editRecipeForm' encType=\"multipart/form-data\" method=\"post\" onSubmit={this.onSaveHandler}>\n                        <div className='saveButtonContainer'>\n                            <button type='submit' className='saveButtonInnerContainer' title='Save changes' style={this.state.editing ? null : { display: 'none' }}><FaSave className='saveButton'/></button>\n                        </div>\n                        <div className='recipe-title-container'>\n                            {title}\n                        </div>\n                        {date}\n                        {image}\n                        <div className='recipeDetails'>\n                            {details}\n                        </div>\n                    </form>\n                </div>\n    \n            )\n        }) : null\n    \n        if(recipeData === null){\n            this.props.history.push('/')\n        }\n    \n        return(\n            <div>\n                <BackButton handleClickedBackButton={this.props.handleClickedBackButton}/>\n                <div className='recipeContainer'>\n                    {recipe}\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default Recipe","import React from 'react'\n\n\nconst SearchBar = (props) =>{\n\n    let search = props.recipes === null || props.recipes.length === 0 ? <p>Click the pulsating button in the top right to add your first recipe.</p> : <input value={props.search} placeholder='Search Recipes...' className='searchBar Input' onChange={props.handleSearch} autoFocus=\"autofocus\"/>\n    \n    return(\n        <div>\n            {props.recipes === null ? null : search}\n            {/* <input value={props.search} placeholder='Search...' className='searchBar Input' onChange={props.handleSearch} autofocus=\"autofocus\"/> */}\n            \n        </div>\n    )\n}\n\nexport default SearchBar","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport SearchBar from '../utils/SearchBar'\n\n\nconst Nav = (props) => {\n    let history = props.history ? props.history : null\n    let classes = props.recipes === null || props.recipes.length === 0 ? 'addRecipe pulse' : 'addRecipe'\n    let addNew = props.loggedIn ? <NavLink to='/new-recipe' title='Add New Recipe' className={classes}>+</NavLink> : null\n    let logOut = props.loggedIn ? <NavLink to='/login' className='signOut' onClick={props.handleSignOut}>Sign out</NavLink> : null\n    let clearSearchClass = props.search.length > 0 ? 'clearSearch': 'hideClearSearch'\n    \n    let search = history === '/' ? \n        <div className='searchBarContainer'>\n            <SearchBar \n                search={props.search}\n                handleSearch={props.handleSearch}\n                recipes={props.recipes}\n            />\n            <div className={clearSearchClass} onClick={props.handleClearSearchBar}>clear</div>\n        </div>\n    \n    : null\n\n    let route = props.loggedIn ? '/' : '/login'\n    \n    return (\n        <div className='navContainer'>\n            <div className='navContainer'>\n                <NavLink to={route} className='titleLogo'><img alt=\"Chef Caitlin\" src=\"./media/PM-168.png\" className='chef-icon'/><h1 className='title'>C's Recipes</h1></NavLink>\n                <ul>\n                    {addNew}\n                </ul>\n                    {logOut}\n            </div>\n            {search}\n        </div>\n    )\n}\n\nexport default Nav","import React, { Component } from 'react'\nimport { Editor, EditorState, RichUtils, convertToRaw } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n// import Editor from 'draft-js-plugins-editor'\n\n// import createHighlightPlugin from './plugins/highlightPlugin'\n// import addLinkPlugin from './plugins/addLinkPlugin'\nimport BlockStyleToolbar, { getBlockStyle } from './blockStyles/BlockStyleToolbar'\n\n// const highlightPlugin = createHighlightPlugin();\n\n\nclass TextEditor extends Component {\n    state = {\n        editorState: EditorState.createEmpty(),\n    }\n\n    // plugins = [\n    //     highlightPlugin,\n    //     addLinkPlugin\n    // ]\n\n    onChange = (editorState) => {\n        let contentState = this.state.editorState.getCurrentContent()\n        let uploadDetails = convertToRaw(contentState)\n        uploadDetails[\"content\"] = JSON.stringify(uploadDetails)\n        this.setState({\n            editorState\n        }, this.props.onTextEditorChangeHandler(uploadDetails))\n        // }, this.props.onTextEditorChangeHandler(this.state.editorState, uploadDetails))\n    }\n\n    handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(this.state.editorState, command)\n        if (newState) {\n            this.onChange(newState)\n            return 'handled'\n        }\n        return 'not-handled'\n    }\n\n    onUnderlineClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'))\n    }\n    onBoldClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'))\n    }\n    onItalicClick = (e) => {\n        e.preventDefault()\n        this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'))\n    }\n    // onHighlightClick = (e) => {\n    //     e.preventDefault()\n    //     this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'HIGHLIGHT'))\n    // }\n\n    toggleBlockType = (blockType) => {\n        this.onChange(RichUtils.toggleBlockType(this.state.editorState, blockType))\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <button className=\"formatButtons\" onClick={this.onUnderlineClick} title='underline'><u>U</u></button>\n                    <button className=\"formatButtons\" onClick={this.onBoldClick} title='bold'><b>B</b></button>\n                    <button className=\"formatButtons\" onClick={this.onItalicClick} title='italics'><em>I</em></button>\n                    {/* <button className=\"highlight\" onClick={this.onHighlightClick} title='highlight'><span style={{background: 'yellow'}}>H</span></button> */}\n                    <BlockStyleToolbar\n                        editorState={this.state.editorState}\n                        onToggle={this.toggleBlockType}\n                    />\n                </div>\n                <div className=\"editors\">\n                    <Editor \n                        blockStyleFn={getBlockStyle}\n                        editorState={this.state.editorState}\n                        handleKeyCommand={this.handleKeyCommand}\n                        onChange={this.onChange}\n                        // plugins={this.plugins}\n                        placeholder='Recipe steps and ingredients'\n                        readOnly={false}\n                        spellCheck\n                    />\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextEditor","import React, {Component} from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { FaSave } from 'react-icons/fa'\n\n\n\nimport BackButton from '../utils/BackButton'\n// import PhotoUploader from '../utils/PhotoUploader'\nimport TextEditor from '../utils/TextEditor'\n\nclass AddRecipeForm extends Component {\n    state = {\n        newRecipe: {\n            title: '',\n            date: null,\n            details: '',\n            user_id: null,\n        },\n        image: null,\n        imageUrl: null,\n        detailsForUpload: null,\n        formValidated: true,\n    }\n\n    onTitleChangeHandler = (e) => {\n        this.setState({\n            newRecipe: {\n                ...this.state.newRecipe,\n                title: e.target.value,\n            }\n        }, // console.log(this.state.newRecipe)\n        )}\n    onImageUrlChangeHandler = (e) => {\n        this.setState({\n            imageUrl: e.target.value,\n            })\n    }\n    onTextEditorChangeHandler = (uploadDetails) => {\n    // onTextEditorChangeHandler = (state, uploadDetails) => {\n        this.setState({\n            // newRecipe: {\n            //     ...this.state.newRecipe,\n            //     details: state,\n            // },\n            detailsForUpload: uploadDetails\n        })\n    }\n\n    // onImageChangeHandler = (e) => {\n    //     console.log(e.target.files[0])\n    //     this.setState({\n    //             image: e.target.files[0],\n    //     })\n    // }\n\n    onSubmitHandler = (e) => {\n        e.preventDefault()\n\n        // const photoData = new FormData()\n        // const file = this.state.image ? this.state.image.name : null\n        // photoData.append(\"file\", file)\n        // axios.post('/recipes/photo-uploader', photoData, {\n        //     headers: { \n        //         'Content-Type': 'multipart/form-data',\n        //     }\n        // })\n        // .then(res => {\n        //     console.log('response from file upload',res)\n        // })\n        // .catch(err => err)\n\n        const formData = {\n            title: this.state.newRecipe.title,\n            date: moment().format('l'),\n            details: this.state.detailsForUpload,\n            photo: this.state.image ? `public/uploads/IMAGE-${Date.now()}-${this.state.image.name}` : this.state.imageUrl ? this.state.imageUrl : null,\n            // retrieve user_id from JWT?\n            user_id: this.props.userId,\n        }\n        // console.log('formData', formData)\n\n        axios.post('/recipes/add-new-recipe', formData)\n        .then(res => {\n            // console.log('This file was successfully uploaded', res.data)\n\n            this.props.history.push('/')\n        })\n        .catch(err => err)\n    }\n\n\n    render() {\n        // console.log('DETAILS FOR UPLOAD', this.state.detailsForUpload)\n        return (\n            <div>\n                <BackButton handleClickedBackButton={this.props.handleClickedBackButton}/>\n                <div className='recipeFormContainer'>\n                    <form action='/recipes/add-new-recipe' className='form' encType=\"multipart/form-data\" method=\"post\" onSubmit={this.onSubmitHandler}>\n                        <div>\n                            <label className='recipeTitleInput Label'>Title</label>\n                            <input id='title' value={this.state.newRecipe.title} placeholder='What is the title of your dish?' className='Input' onChange={this.onTitleChangeHandler} type=\"text\" required/>\n                        </div>\n\n                        <div>\n                            <label className='recipeDetailsInput Label'>Recipe</label>\n                            {/* <textarea id='details' value={this.state.newRecipe.details} className='Input' placeholder='Enter ingredients, timing and recipe steps...' onChange={this.onChangeHandler} rows='10'/> */}\n                            <TextEditor onTextEditorChangeHandler={this.onTextEditorChangeHandler} formValidated={this.state.formValidated}/>\n                        </div>\n                        <div>\n                            {/* <label className='recipeTitleInput Label'>Title</label> */}\n                            <label htmlFor='url' className='recipeTitleInput Label'>Image</label>\n                            <input id='imageUrl' type='url' name='url' value={this.state.newRecipe.imageUrl} placeholder='Enter image URL' className='Input imageUrlFieldInput' onChange={this.onImageUrlChangeHandler}/>\n                        </div>\n                        {/* <PhotoUploader handleImageSelect={this.onImageChangeHandler} image={this.state.image}/> */}\n                        {/* <button type='submit' className='submitButton'>Save</button> */}\n                        <button type='submit' className='submitButton submitRecipe saveButtonInnerContainer' title='Save Recipe'><FaSave className='saveButton'/></button>\n\n\n                    </form>\n                </div>\n\n\n            </div>\n        )\n\n    }\n}\n\nexport default AddRecipeForm","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { NavLink } from 'react-router-dom'\n\n\nclass Register extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        failedRegistrationMessage: null,\n    }\n\n    handleInputChange = (e) => {\n        let fieldId = e.target.id\n\n        this.setState({\n            [fieldId]: e.target.value\n        })\n    }\n\n    handleInputSubmit = (e) => {\n        e.preventDefault()\n        let formData = {\n            first: this.state.firstName,\n            last: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password,\n        }\n        // console.log('formData',formData)\n\n        axios.post('/users/add-new-user', formData)\n        .then(async res => {\n            // console.log('from register', res.data)\n            if (res.data.id) {\n                await this.props.checkForSession()\n                console.log('The user was successfully registered')\n                this.props.history.push('/')\n            } else {\n                this.setState({\n                    failedRegistrationMessage: <p className='unsuccessful'>Email address is taken. Please try again.</p>\n                })\n            }\n            \n\n        })\n        .catch(err => err)\n\n    }\n\n    render() {\n\n        return(\n            <div>\n                <h2 className='loginregisterTitle'>Register</h2>\n                <p className='or'>or</p>\n                <NavLink to='/login' className='switchRegisterLogin'>Log in</NavLink>\n                <form className='form loginRegisterForm' action='/users/add-new-user' encType=\"multipart/form-data\" method=\"post\" onSubmit={this.handleInputSubmit}>\n                    <label className='login-register-label Label'>First Name</label>\n                    <input id='firstName' value={this.state.firstName} placeholder='ex. John' className='Input login-register-input' onChange={this.handleInputChange} required/>\n                    \n                    <label className='login-register-label Label'>Last Name</label>\n                    <input id='lastName' value={this.state.lastName} placeholder='ex. Appleseed' className='Input login-register-input' onChange={this.handleInputChange} required/>\n                    \n                    <label className='login-register-label Label'>Email</label>\n                    <input id='email' type=\"email\" value={this.state.email} placeholder='ex. example@email.com' className='Input login-register-input' onChange={this.handleInputChange} required/>\n                    \n                    <label className='login-register-label Label'>Password</label>\n                    <input id='password' type=\"password\" value={this.state.password} placeholder='be as complex as possible' className='Input login-register-input' onChange={this.handleInputChange} required/>\n                    \n                    <button type='submit' className='submitButton'>Register</button>\n                    {this.state.failedRegistrationMessage}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Register","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { NavLink } from 'react-router-dom'\n\n\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        failedLoginMessage: null,\n    }\n\n    handleInputChange = (e) => {\n        let fieldId = e.target.id\n\n        this.setState({\n            [fieldId]: e.target.value\n        })\n    }\n\n    handleInputSubmit = (e) => {\n        e.preventDefault()\n        let formData = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n\n        axios.post('/users/login', formData)\n        .then(async res => {\n            if(res.data.verified){\n                await this.props.checkForSession()\n                this.props.history.push('/')\n            } else {\n                this.setState({\n                    failedLoginMessage: <p className='unsuccessful'>Email and/or password is incorrect.</p>\n                })\n            }\n        })\n        .catch(err => err)\n\n    }\n\n    render() {\n\n        return(\n            <div>\n                <h2 className='loginregisterTitle'>Log in</h2>\n                <p className='or'>or</p>\n                <NavLink to='/register' className='switchRegisterLogin'>Register</NavLink>\n                <form className='form loginRegisterForm' action='/users/login' encType=\"multipart/form-data\" method=\"post\" onSubmit={this.handleInputSubmit}>\n                    <label className='login-register-label Label'>Email</label>\n                    <input id='email' type=\"email\" value={this.state.email} placeholder='enter email' className='Input login-register-input' onChange={this.handleInputChange} required/>\n                    \n                    <label className='login-register-label Label'>Password</label>\n                    <input id='password' type=\"password\" value={this.state.password} placeholder='enter password' className='Input login-register-input' onChange={this.handleInputChange} required/>\n                    \n                    <button type='submit' className='submitButton'>Log in</button>\n                    {this.state.failedLoginMessage}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login","import React, {Component} from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\n\nimport './App.css';\n// import Dashboard from './containers/Dashboard'\nimport Recipes from './components/Recipes'\nimport Recipe from './components/Recipe'\nimport Nav from './containers/Nav'\nimport AddRecipeForm from './components/AddRecipeForm'\nimport Register from './components/Register'\nimport Login from './components/Login'\n// import SearchBar from './utils/SearchBar'\n\n\nclass App extends Component {\n  state = {\n    recipes: null,\n    selectedRecipe: null,\n    editedDetails: null,\n    search: '',\n    userId: null,\n    loggedIn: false,\n    loading: true,\n    history: null,\n}\n\n// shouldComponentUpdate(prevProps, prevState){\n//   console.log('shouldComponentUpdate')\n//   console.log('Does state match prevState?', this.state.recipes === prevState.recipes)\n//   return this.state.recipes !== prevState.recipes\n// }\n\ncomponentDidMount() {\n  this.checkForSession()\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n  if (prevState.history !== this.props.history.location.pathname) {\n    this.setHistoryState()\n\n  }\n\n  if(prevState.recipes !== null && prevState.recipes === this.state.recipes) {\n    this.handleGetRecipes()\n  }\n}\n\nsetHistoryState = () => {\n  this.setState({\n    history: this.props.history.location.pathname\n  })\n}\n\nhandleLoading = () => {\n  this.setState({\n    loading: false,\n  })\n}\n\nsetUserState = (id) => {\n  this.setState({\n    userId: id,\n    loggedIn: true,\n  })\n}\n\ncheckForSession = () => {\n  axios.get('/session')\n  .then ( async res => {\n    if(res.data.id){\n      this.setUserState(res.data.id)\n    }\n    if(res.data.message){\n      this.handleLoading()\n    }\n  })\n  .then(() => {\n    if(this.state.userId){\n      this.handleGetRecipes()\n      this.handleLoading()\n    }\n  })\n\n}\n\nhandleGetRecipes = () => {\n  axios.get(`/recipes/allrecipes`)\n    .then(res => {\n      if(res.data !== this.state.recipes){\n        const recipesData = res.data\n        this.setState({\n            recipes: recipesData,\n        })\n      }\n    })\n    .catch (err => err)\n}\n\nclickedRecipeHandler = (recipeId) => {\n    let recipe = this.state.recipes.filter(rec => {\n        return rec.id === recipeId\n    })\n    this.setState({\n        selectedRecipe: recipe\n    }, () => this.props.history.push(`/recipe/${recipeId}`))\n    window.scrollTo(0, 0) \n}\n\nclickedBackButtonHandler = () => {\n  this.props.history.push('/')\n}\n\nonTextEditorChangeHandlerEdit = (editedDetails) => {\n      this.setState({\n          editedDetails\n      })\n    }\n\nhandleSearch = (e) => {\n  this.setState({\n    search: e.target.value\n  })\n}\n\nhandleClearSearchBar = () => {\n  this.setState({\n    search: '',\n  })\n}\n\nhandleSignOut = () => {\n  axios.delete('/users/logout')\n  .then(\n    this.setState({\n      loggedIn: false,\n      userId: null,\n      recipes: null,\n    })\n  )\n}\n\n\n  render() {\n    let routes = null\n\n      if(this.state.loggedIn && !this.state.loading) {\n        // PRIVATE ROUTES\n        routes = (\n          <div>\n            <Route\n              path={'/recipe/:id'}\n              render={(props) => <Recipe \n                              {...props} \n                              selectedRecipe={this.state.selectedRecipe}\n                              editedDetails={this.state.editedDetails}\n                              handleClickedBackButton={this.clickedBackButtonHandler}\n                              onTextEditorChangeHandlerEdit={this.onTextEditorChangeHandlerEdit}/>} />\n            <Route\n              path={'/new-recipe'}\n              render={(props) => <AddRecipeForm\n                                  {...props}\n                                  userId={this.state.userId}\n                                  handleClickedBackButton={this.clickedBackButtonHandler}/>} />\n            <Route \n              path={'/'} exact \n              render={(props) => <Recipes \n                              {...props} \n                              recipes={this.state.recipes}\n                              search={this.state.search}\n                              handleSearch={this.handleSearch}\n                              handleClearSearchBar={this.handleClearSearchBar}\n                              handleClickedRecipe={this.clickedRecipeHandler}/>} />\n            <Redirect to='/' />  \n          </div>\n        )\n      } \n      if (!this.state.loggedIn && !this.state.loading) {\n        // PUBLIC ROUTES\n        routes = (\n          <div>\n            <Route\n              path={'/register'}\n              render={(props) => <Register\n                              {...props}\n                              checkForSession={this.checkForSession}\n                              />}\n            />\n            <Route\n              path={'/login'}\n              render={(props) => <Login\n                              {...props}\n                              checkForSession={this.checkForSession}\n                              />}\n            />\n            \n            <Redirect to='/login' />\n        </div>\n        )\n      }\n\n    return (\n      <div className=\"App\">\n        <Nav \n          loggedIn={this.state.loggedIn} \n          recipes={this.state.recipes} \n          handleSignOut={this.handleSignOut}\n          search={this.state.search}\n          handleSearch={this.handleSearch}\n          history={this.state.history}\n          handleClearSearchBar={this.handleClearSearchBar}/>\n        <div className='body'>\n        {routes}\n\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}